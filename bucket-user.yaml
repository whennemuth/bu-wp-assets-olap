AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Description: >
  This stack creates an IAM principal and role whose privileges center around access to a specified s3 bucket.

Parameters:

  S3BucketName:
    Description: The name of the s3 bucket this instance will be accessing.
    Type: String

  SupportingAccessPointName:
    Description: The supporting access point name for the s3 bucket this instance will be accessing.
    Type: String
    Default: empty

  ObjectLambdaAccessPointName:
    Description: The object lambda access point name for the s3 bucket this instance will be accessing.
    Type: String
    Default: empty

  LambdaArn:
    Description: The arn of the lambda function associated with the olap
    Type: String
    Default: empty

  Service:
    Description: Service catalog name
    Type: String
    Default: websites

  Function:
    Description: The Function within the Service
    Type: String
    Default: wordpress


Conditions:
  # If any one of the following three conditions is false (no value provided), then the other 2 would be also.
  IncludeSap: 
    !Not [!Equals [!Ref SupportingAccessPointName, empty]]
  IncludeOlap: 
    !Not [!Equals [!Ref ObjectLambdaAccessPointName, empty]]
  IncludeLambda: 
    !Not [!Equals [!Ref LambdaArn, empty]]

Resources:

  BucketUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Sub ${AWS::StackName}
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}
        - Key: Service
          Value: !Ref Service
        - Key: Function
          Value: !Ref Function

  AccessKey:
    Type: AWS::IAM::AccessKey
    DependsOn: BucketUser
    Properties: 
      Status: Active
      UserName: !Ref BucketUser

  Secret:
    Type: AWS::SecretsManager::Secret
    DependsOn: AccessKey
    Properties: 
      Name: !Sub ${BucketUser}/AccessKey
      Description: !Sub Stores the credentials for the ${BucketUser} IAM principal.
      SecretString: 
        !Sub
          - |
            {
              "user": "${user}", 
              "bucket": "${bucket}",
              "aws_access_key_id": "${id}",
              "aws_secret_access_key": "${key}",
              "aws_region": "${region}"
            }
          - user: !Ref BucketUser
            id: !Ref AccessKey
            key: !GetAtt AccessKey.SecretAccessKey
            region: !Ref AWS::Region
            bucket: !Ref S3BucketName
      Tags:
        - Key: Name
          Value: !Sub ${BucketUser}/AccessKey
        - Key: Service
          Value: !Ref Service
        - Key: Function
          Value: !Ref Function

  S3ManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Policy for access to s3 bucket and secrets manager
      ManagedPolicyName: !Sub ${AWS::StackName}-user-access-policy
      Users:
        - !Ref BucketUser
      Path: /
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Resource: 
            - !Ref Secret
          Action:
            - secretsmanager:GetSecretValue
        - Effect: Allow
          Resource: 
            - !Sub arn:aws:s3:::${S3BucketName}
            - !Sub arn:aws:s3:::${S3BucketName}/*
          Action: "*"
        - !If
          - IncludeLambda
          - Effect: Allow
            Resource: 
              - !Sub ${LambdaArn}
            Action: "*"
          - !Ref AWS::NoValue
        - !If
          - IncludeLambda
          - Effect: Allow
            Resource: 
              - !Sub arn:aws:s3:::kuali-conf
              - !Sub arn:aws:s3:::kuali-conf/*
            Action: "*"
          - !Ref AWS::NoValue
        - !If
          - IncludeSap
          - Effect: Allow
            Resource: 
              - !Sub arn:aws:s3:${AWS::Region}:${AWS::AccountId}:accesspoint/${SupportingAccessPointName}
              - !Sub arn:aws:s3:${AWS::Region}:${AWS::AccountId}:accesspoint/${SupportingAccessPointName}/*
            Action: "*"
          - !Ref AWS::NoValue
        - !If
          - IncludeOlap
          - Effect: Allow
            Resource: 
              - !Sub arn:aws:s3-object-lambda:${AWS::Region}:${AWS::AccountId}:accesspoint/${ObjectLambdaAccessPointName}
              - !Sub arn:aws:s3-object-lambda:${AWS::Region}:${AWS::AccountId}:accesspoint/${ObjectLambdaAccessPointName}/*
            Action: "*"
          - !Ref AWS::NoValue

    

Outputs:

  BucketUserName:
    Description: The name of the bucket user
    Value: !Ref BucketUser

  SecretArn:
    Description: The arn of the secret that contains the access key for the user
    Value: !Ref Secret

  S3ManagedPolicyArn:
    Description: Policy for access to s3 bucket and secrets manager
    Value: !Ref S3ManagedPolicy